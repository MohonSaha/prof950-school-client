"use client";
import React, { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";
import {
  AlertDialog,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogFooter,
} from "@/components/ui/alert-dialog";
import {
  AlertCircle,
  Phone,
  Shield,
  FileText,
  MessageCircle,
  BookOpen,
  Bell,
  PhoneCall,
} from "lucide-react";

const SafetyAndSupport = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [report, setReport] = useState("");
  const [anonymous, setAnonymous] = useState("yes");
  const [studentName, setStudentName] = useState("");
  const [studentClass, setStudentClass] = useState("");
  const [studentRoll, setStudentRoll] = useState("");

  const handleSubmit = () => {
    console.log("Report Submitted:", {
      report,
      anonymous,
      ...(anonymous === "no" && {
        name: studentName,
        class: studentClass,
        roll: studentRoll,
      }),
    });
    setIsOpen(false);

    // Reset form fields after submission
    setReport("");
    setAnonymous("yes");
    setStudentName("");
    setStudentClass("");
    setStudentRoll("");
  };

  const emergencyContacts = [
    { name: "ржЬрж╛рждрзАржпрж╝ ржЬрж░рзБрж░рзА рж╕рзЗржмрж╛", number: "рзпрзпрзп" },
    { name: "ржирж╛рж░рзА ржУ рж╢рж┐рж╢рзБ ржирж┐рж░рзНржпрж╛рждржи ржкрзНрж░рждрж┐рж░рзЛржз рж╣рзЗрж▓рзНржкрж▓рж╛ржЗржи", number: "рззрзжрзп" },
    { name: "рж╢рж┐рж╢рзБ рж╕рж╣рж╛ржпрж╝рждрж╛ рж╣ржЯрж▓рж╛ржЗржи", number: "рззрзжрзпрзо" },
    { name: "ржЖржЗржирж┐ рж╕рж╣рж╛ржпрж╝рждрж╛", number: "рззрзмрзкрзйрзж" },
    { name: "рж╕рзНржХрзБрж▓ рж╢рж┐ржХрзНрж╖ржХ", number: "01609185463" },
    { name: "ржХрж╛ржЙржирзНрж╕рзЗрж▓рж░", number: "01609185463" },
  ];

  const awarenessMaterials = [
    {
      title: "ржирж┐ржЬрзЗржХрзЗ рж░ржХрзНрж╖рж╛ ржХрж░рзБржи",
      description: "ржЖрждрзНржорж░ржХрзНрж╖рж╛рж░ ржорзВрж▓ ржирзАрждрж┐ ржУ ржХрзМрж╢рж▓рж╕ржорзВрж╣",
      icon: <Shield className="h-6 w-6" />,
    },
    {
      title: "ржЖржЗржирж┐ ржЕржзрж┐ржХрж╛рж░",
      description: "ржЖржкржирж╛рж░ ржЖржЗржирж┐ ржЕржзрж┐ржХрж╛рж░ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирзБржи",
      icon: <FileText className="h-6 w-6" />,
    },
    {
      title: "рж╕ржорзНржорждрж┐рж░ ржЧрзБрж░рзБрждрзНржм",
      description: "рж╕ржорзНржорждрж┐ ржХрзА ржПржмржВ ржХрзЗржи ржПржЯрж┐ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг",
      icon: <BookOpen className="h-6 w-6" />,
    },
    {
      title: "рж╕рж╣рж╛ржпрж╝рждрж╛ ржЪрж╛ржУржпрж╝рж╛",
      description: "ржХрзАржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржЪрж╛ржЗржмрзЗржи ржПржмржВ ржХрж╛рж░ ржХрж╛ржЫрзЗ ржпрж╛ржмрзЗржи",
      icon: <MessageCircle className="h-6 w-6" />,
    },
  ];

  const awarenessRules = [
    "ржЕржкрж░рж┐ржЪрж┐ржд ржХрж╛рж░ржУ рж╕рж╛ржерзЗ ржПржХрж╛ ржирж╛ ржерж╛ржХрж╛ ржнрж╛рж▓рзЛред",
    "ржирж┐ржЬрзЗрж░ ржЕржмрж╕рзНржерж╛ржи ржПржмржВ ржирж┐рж░рж╛ржкрждрзНрждрж╛ рж╕ржорзНржкрж░рзНржХрзЗ рж╕ржмрж╕ржоржпрж╝ рж╕рждрж░рзНржХ ржерж╛ржХрзБржиред",
    "ржХрж╛ржЙржХрзЗ ржмрж┐рж╢рзНржмрж╛рж╕ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рж▓рзЗ ржЕржнрж┐ржнрж╛ржмржХрзЗрж░ рж╕рж╛ржерзЗ ржЖрж▓рзЛржЪржирж╛ ржХрж░рзБржиред",
    "ржХрзЛржирзЛ ржЕржкрзНрж░рзАрждрж┐ржХрж░ ржкрж░рж┐рж╕рзНржерж┐рждрж┐ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж┐рж╢рзНржмрж╕рзНржд ржХрж╛ржЙржХрзЗ ржЬрж╛ржирж╛ржи",
    "ржЖржкржирж╛рж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ржХрзЗ рж╕рж░рзНржмржжрж╛ ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ ржжрж┐ржи",
  ];

  return (
    <div className="container mx-auto py-8 px-4">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold mb-4 text-red-600">
          ЁЯФ┤ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржУ рж╕рж╣рж╛ржпрж╝рждрж╛ ржХрзЗржирзНржжрзНрж░
        </h1>
        <p className="text-lg max-w-3xl mx-auto text-gray-700">
          ржЖржкржирж┐ ржмрж┐ржкржжрзЗ ржерж╛ржХрж▓рзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржкрзЗрждрзЗ ржирж┐ржЪрзЗрж░ рждржерзНржп ржЕржирзБрж╕рж░ржг ржХрж░рзБржиред ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓
          ржХржорж┐ржЙржирж┐ржЯрж┐рж░ рж╕ржХрж▓ рж╕ржжрж╕рзНржпрзЗрж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржУ рж╕рзБрж░ржХрзНрж╖рж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рждрзЗ ржЖржорж░рж╛
          ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ржмржжрзНржзред
        </p>
      </div>

      <Tabs defaultValue="emergency" className="w-full max-w-5xl mx-auto">
        <TabsList className="grid w-full grid-cols-3">
          <TabsTrigger value="emergency">ржЬрж░рзБрж░рж┐ рж╕рж╣рж╛ржпрж╝рждрж╛</TabsTrigger>
          <TabsTrigger value="awareness">рж╕ржЪрзЗрждржирждрж╛</TabsTrigger>
          <TabsTrigger value="report">рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рзБржи</TabsTrigger>
        </TabsList>

        <TabsContent value="emergency" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Phone className="h-6 w-6 text-red-500" />
                <span>ржЬрж░рзБрж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ ржиржорзНржмрж░</span>
              </CardTitle>
              <CardDescription>
                ржпрзЗржХрзЛржирзЛ ржЬрж░рзБрж░рж┐ ржкрж░рж┐рж╕рзНржерж┐рждрж┐рждрзЗ ржжрзНрж░рзБржд рж╕рж╛рж╣рж╛ржпрзНржп ржкрзЗрждрзЗ ржирж┐ржЪрзЗрж░ ржиржорзНржмрж░ржЧрзБрж▓рзЛ
                ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред
              </CardDescription>
            </CardHeader>
            <CardContent className="max-h-[80vh]">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                {emergencyContacts.map((contact, index) => (
                  <div
                    key={index}
                    className="flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 "
                  >
                    <div className="font-medium">{contact.name}</div>
                    <div className="flex items-center gap-2 ">
                      <span className="font-bold text-lg text-red-500">
                        {contact.number}
                      </span>
                      <Button
                        variant="outline"
                        size="sm"
                        onClick={() =>
                          (window.location.href = `tel:${contact.number}`)
                        }
                      >
                        <span className="hidden md:flex">ржХрж▓ ржХрж░рзБржи</span>
                        <PhoneCall className="md:hidden text-green-700" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>

              <div className="mt-6 flex justify-center">
                <Button
                  className="bg-red-600 hover:bg-red-700 text-white px-6 py-6 text-lg flex items-center gap-2"
                  onClick={() => (window.location.href = "tel:999")}
                >
                  <Bell className="h-5 w-5" />
                  ЁЯЪи рзпрзпрзп-ржП ржЬрж░рзБрж░рж┐ ржХрж▓ ржХрж░рзБржи
                </Button>
              </div>
            </CardContent>
            <CardFooter className="flex justify-center">
              <p className="text-sm text-gray-500">
                ржЬрж░рзБрж░рж┐ ржЕржмрж╕рзНржерж╛ржпрж╝ рж╕ржмрж╕ржоржпрж╝ ржкрж░рж┐ржмрж╛рж░, рж╢рж┐ржХрзНрж╖ржХ ржмрж╛ ржмрж┐рж╢рзНржмрж╕рзНржд
                ржкрзНрж░рж╛ржкрзНрждржмржпрж╝рж╕рзНржХржжрзЗрж░ рж╕рж╛рж╣рж╛ржпрзНржп ржирж┐ржиред
              </p>
            </CardFooter>
          </Card>
        </TabsContent>

        <TabsContent value="awareness" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <BookOpen className="h-6 w-6 text-blue-500" />
                <span>рж╕ржЪрзЗрждржирждрж╛ ржУ ржкрзНрж░рждрж┐рж░рзЛржз</span>
              </CardTitle>
              <CardDescription>
                ржирж┐ржЬрзЗржХрзЗ ржПржмржВ ржЖржкржирж╛рж░ рж╕рж╣ржкрж╛ржарзАржжрзЗрж░ рж╕рзБрж░ржХрзНрж╖рж┐ржд рж░рж╛ржЦрждрзЗ ржПржЗ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг
                рждржерзНржпржЧрзБрж▓рзЛ ржЬрзЗржирзЗ рж░рж╛ржЦрзБржиред
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {awarenessMaterials.map((material, index) => (
                  <Card
                    key={index}
                    className="overflow-hidden hover:shadow-md transition-shadow"
                  >
                    <CardHeader className="bg-blue-50 flex flex-row items-center gap-4 pb-2">
                      <div className="bg-blue-100 p-2 rounded-full">
                        {material.icon}
                      </div>
                      <CardTitle className="text-lg">
                        {material.title}
                      </CardTitle>
                    </CardHeader>
                    <CardContent className="pt-4">
                      <p>{material.description}</p>
                    </CardContent>
                    <CardFooter>
                      <Button variant="ghost" className="w-full">
                        ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржжрзЗржЦрзБржи
                      </Button>
                    </CardFooter>
                  </Card>
                ))}
              </div>

              <div className="mt-8 p-4 bg-amber-50 rounded-lg border border-amber-200">
                <h3 className="text-lg font-medium flex items-center gap-2 mb-2">
                  <AlertCircle className="h-5 w-5 text-amber-500" />
                  <span>ржоржирзЗ рж░рж╛ржЦржмрзЗржи</span>
                </h3>
                <ul className="list-disc pl-5 space-y-2">
                  {awarenessRules.map((rule, index) => (
                    <li key={index}>{rule}</li>
                  ))}
                </ul>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="report" className="mt-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertCircle className="h-6 w-6 text-purple-500" />
                <span>ржЧрзЛржкржирзАржпрж╝ ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо</span>
              </CardTitle>
              <CardDescription>
                ржпрзЗржХрзЛржирзЛ ржЕржирж╛ржХрж╛ржЩрзНржХрзНрж╖рж┐ржд ржШржЯржирж╛ ржмрж╛ рж╕ржорж╕рзНржпрж╛ рж╕ржорзНржкрж░рзНржХрзЗ ржЬрж╛ржирж╛рждрзЗ ржЖржорж╛ржжрзЗрж░
                ржЧрзЛржкржирзАржпрж╝ рж░рж┐ржкрзЛрж░рзНржЯрж┐ржВ ржмрзНржпржмрж╕рзНржерж╛ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржиред
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                <Card>
                  <CardHeader className="bg-purple-50">
                    <CardTitle className="text-lg">ржЕржирж▓рж╛ржЗржи ржлрж░рзНржо</CardTitle>
                  </CardHeader>
                  <CardContent className="pt-4">
                    <p>ржЖржкржирж╛рж░ ржкрж░рж┐ржЪржпрж╝ ржЧрзЛржкржи рж░рзЗржЦрзЗ ржЕржирж▓рж╛ржЗржирзЗ рж╕ржорж╕рзНржпрж╛ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рзБржиред</p>
                  </CardContent>
                  <CardFooter>
                    <Button
                      className="w-full bg-blue-600 hover:bg-blue-700"
                      onClick={() => setIsOpen(true)}
                    >
                      ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзБржи
                    </Button>
                  </CardFooter>
                </Card>

                <Card>
                  <CardHeader className="bg-purple-50">
                    <CardTitle className="text-lg">рж╕рж░рж╛рж╕рж░рж┐ ржпрзЛржЧрж╛ржпрзЛржЧ</CardTitle>
                  </CardHeader>
                  <CardContent className="pt-4">
                    <p>
                      рж╕рзНржХрзБрж▓рзЗрж░ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржжрж╛ржпрж╝рж┐рждрзНржмржкрзНрж░рж╛ржкрзНржд рж╢рж┐ржХрзНрж╖ржХрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рзБржиред
                    </p>
                  </CardContent>
                  <CardFooter>
                    <Button variant="outline" className="w-full">
                      ржпрзЛржЧрж╛ржпрзЛржЧ рждржерзНржп ржжрзЗржЦрзБржи
                    </Button>
                  </CardFooter>
                </Card>
              </div>

              <div className="p-4 bg-gray-50 rounded-lg border">
                <h3 className="font-medium mb-2">ржЖржкржирж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ рж╕ржорзНржкрж░рзНржХрзЗ</h3>
                <ul className="space-y-2 text-sm">
                  <li className="flex items-start gap-2">
                    <Shield className="h-5 w-5 text-green-500 flex-shrink-0 mt-0.5" />
                    <span>ржЖржкржирж╛рж░ ржкрж░рж┐ржЪржпрж╝ рж╕ржорзНржкрзВрж░рзНржг ржЧрзЛржкржи рж░рж╛ржЦрж╛ рж╣ржмрзЗ</span>
                  </li>
                  <li className="flex items-start gap-2">
                    <Shield className="h-5 w-5 text-green-500 flex-shrink-0 mt-0.5" />
                    <span>
                      рж╕ржХрж▓ рж░рж┐ржкрзЛрж░рзНржЯ ржЕрждрзНржпржирзНржд ржЧрзБрж░рзБрждрзНржмрзЗрж░ рж╕рж╛ржерзЗ ржмрж┐ржмрзЗржЪржирж╛ ржХрж░рж╛ рж╣ржпрж╝
                    </span>
                  </li>
                  <li className="flex items-start gap-2">
                    <Shield className="h-5 w-5 text-green-500 flex-shrink-0 mt-0.5" />
                    <span>
                      рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рж╛рж░ ржХрж╛рж░ржгрзЗ ржЖржкржирж╛рж░ ржмрж┐рж░рзБржжрзНржзрзЗ ржХрзЛржирзЛ ржкржжржХрзНрж╖рзЗржк ржирзЗржУржпрж╝рж╛ рж╣ржмрзЗ
                      ржирж╛
                    </span>
                  </li>
                </ul>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      <div className="mt-12 bg-blue-50 p-6 rounded-lg max-w-5xl mx-auto">
        <h2 className="text-xl font-bold mb-4 text-center">ржЖржорж╛ржжрзЗрж░ ржЕржЩрзНржЧрзАржХрж╛рж░</h2>
        <p className="text-center mb-6">
          ржЖржорж╛ржжрзЗрж░ рж╕рзНржХрзБрж▓ ржХржорж┐ржЙржирж┐ржЯрж┐рждрзЗ рж╕ржХрж▓рзЗрж░ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржУ рж╕ржорзНржорж╛ржи ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рждрзЗ ржЖржорж░рж╛
          ржкрзНрж░рждрж┐рж╢рзНрж░рзБрждрж┐ржмржжрзНржзред ржпрзМржи рж╣ржпрж╝рж░рж╛ржирж┐ ржУ ржирж┐рж░рзНржпрж╛рждржирзЗрж░ ржмрж┐рж░рзБржжрзНржзрзЗ ржЖржорж╛ржжрзЗрж░ ржЬрж┐рж░рзЛ
          ржЯрж▓рж╛рж░рзЗржирзНрж╕ ржирзАрждрж┐ рж░ржпрж╝рзЗржЫрзЗред
        </p>
        <div className="flex justify-center">
          <Button className="bg-blue-600 hover:bg-blue-700">
            ржЖржорж╛ржжрзЗрж░ ржирзАрждрж┐ржорж╛рж▓рж╛ ржжрзЗржЦрзБржи
          </Button>
        </div>
      </div>

      {/* Alert Dialog (Complaint Form) */}
      <AlertDialog open={isOpen} onOpenChange={setIsOpen}>
        <AlertDialogContent className="max-h-[80vh] overflow-y-auto">
          <AlertDialogHeader>
            <AlertDialogTitle>ржЧрзЛржкржирзАржпрж╝ ржЕржнрж┐ржпрзЛржЧ ржлрж░рзНржо</AlertDialogTitle>
            <AlertDialogDescription>
              ржЖржкржирж╛рж░ ржЕржнрж┐ржпрзЛржЧ рж▓рж┐ржЦрзБржи ржПржмржВ ржирж┐рж░рж╛ржкржж ржерж╛ржХрзБржиред ржПржЯрж┐ рж╢рзБржзрзБржорж╛рждрзНрж░ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╕рзНржХрзБрж▓
              ржХрж░рзНрждрзГржкржХрзНрж╖ ржжрзЗржЦрждрзЗ ржкрж╛рж░ржмрзЗред
            </AlertDialogDescription>
          </AlertDialogHeader>

          <div className="space-y-4">
            <Textarea
              placeholder="ржЖржкржирж╛рж░ ржЕржнрж┐ржЬрзНржЮрждрж╛ рж▓рж┐ржЦрзБржи..."
              value={report}
              onChange={(e) => setReport(e.target.value)}
              className="min-h-32"
            />

            <div className="space-y-2">
              <label className="text-sm text-gray-700 block">
                ржЖржкржирж┐ ржХрж┐ ржмрзЗржирж╛ржорзЗ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рждрзЗ ржЪрж╛ржи?
              </label>
              <select
                className="w-full border rounded-lg p-2"
                value={anonymous}
                onChange={(e) => setAnonymous(e.target.value)}
              >
                <option value="yes">рж╣рзНржпрж╛ржБ, ржЖржорж┐ ржмрзЗржирж╛ржорзЗ ржерж╛ржХрждрзЗ ржЪрж╛ржЗ</option>
                <option value="no">ржирж╛, ржЖржорж┐ ржЖржорж╛рж░ ржкрж░рж┐ржЪржпрж╝ ржжрж┐рждрзЗ ржЪрж╛ржЗ</option>
              </select>
            </div>

            {/* Conditional fields that appear when student selects "no" */}
            {anonymous === "no" && (
              <div className="space-y-3 border-t pt-3">
                <h4 className="font-medium text-sm">ржЖржкржирж╛рж░ ржкрж░рж┐ржЪржпрж╝:</h4>

                <div>
                  <label className="text-sm text-gray-700 block mb-1">
                    ржирж╛ржо
                  </label>
                  <Input
                    placeholder="ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи"
                    value={studentName}
                    onChange={(e) => setStudentName(e.target.value)}
                  />
                </div>

                <div>
                  <label className="text-sm text-gray-700 block mb-1">
                    рж╢рзНрж░рзЗржгрзА
                  </label>
                  <Input
                    placeholder="ржЖржкржирж╛рж░ рж╢рзНрж░рзЗржгрзА рж▓рж┐ржЦрзБржи"
                    value={studentClass}
                    onChange={(e) => setStudentClass(e.target.value)}
                  />
                </div>

                <div>
                  <label className="text-sm text-gray-700 block mb-1">
                    рж░рзЛрж▓ ржиржорзНржмрж░
                  </label>
                  <Input
                    placeholder="ржЖржкржирж╛рж░ рж░рзЛрж▓ ржиржорзНржмрж░ рж▓рж┐ржЦрзБржи"
                    value={studentRoll}
                    onChange={(e) => setStudentRoll(e.target.value)}
                  />
                </div>
              </div>
            )}
          </div>

          <AlertDialogFooter>
            <Button variant="outline" onClick={() => setIsOpen(false)}>
              ржмрж╛рждрж┐рж▓ ржХрж░рзБржи
            </Button>
            <Button
              className="bg-green-600 hover:bg-green-700 text-white"
              onClick={handleSubmit}
            >
              ржЬржорж╛ ржжрж┐ржи
            </Button>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </div>
  );
};

export default SafetyAndSupport;
